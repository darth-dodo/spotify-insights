name: 🚀 Deploy to Production

on:
  push:
    branches: [ main ]
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: false

env:
  NODE_VERSION: '20'

jobs:
  quality-check:
    name: ✅ Pre-deployment Quality Check
    runs-on: ubuntu-latest
    outputs:
      should-deploy: ${{ steps.check.outputs.should-deploy }}

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: ✅ Check if CI passed
        id: check
        run: |
          # Get the latest CI run for this commit
          CI_STATUS=$(gh run list --commit ${{ github.sha }} --workflow=ci.yml --limit=1 --json conclusion --jq '.[0].conclusion')
          
          if [[ "$CI_STATUS" == "success" ]]; then
            echo "✅ CI passed for commit ${{ github.sha }}"
            echo "should-deploy=true" >> $GITHUB_OUTPUT
          else
            echo "❌ CI did not pass for commit ${{ github.sha }}. Status: $CI_STATUS"
            echo "should-deploy=false" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-for-deploy:
    name: 🏗️ Build for Deployment
    runs-on: ubuntu-latest
    needs: quality-check
    if: needs.quality-check.outputs.should-deploy == 'true'

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🏗️ Build application
        run: npm run build
        env:
          VITE_SPOTIFY_CLIENT_ID: ${{ secrets.VITE_SPOTIFY_CLIENT_ID }}
          VITE_SPOTIFY_REDIRECT_URI: ${{ secrets.VITE_SPOTIFY_REDIRECT_URI }}
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
          VITE_ENVIRONMENT: ${{ github.event.inputs.environment || 'production' }}

      - name: 📊 Analyze bundle size
        run: |
          echo "📊 Bundle Analysis:"
          du -sh dist/
          echo "📁 File breakdown:"
          find dist/ -name "*.js" -o -name "*.css" | head -10 | xargs ls -lh

      - name: 📦 Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: production-build
          path: dist/
          retention-days: 30

  deploy-netlify:
    name: 🌐 Deploy to Netlify
    runs-on: ubuntu-latest
    needs: [quality-check, build-for-deploy]
    if: needs.quality-check.outputs.should-deploy == 'true'
    
    environment:
      name: ${{ github.event.inputs.environment || 'production' }}
      url: ${{ steps.deploy.outputs.deploy-url }}

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: production-build
          path: dist/

      - name: 🚀 Deploy to Netlify
        id: deploy
        uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        with:
          args: deploy --dir=dist --prod --message="Deploy ${{ github.sha }}"

      - name: 📊 Deployment summary
        run: |
          echo "🎉 Deployment successful!"
          echo "📅 Deployed at: $(date)"
          echo "🔗 URL: ${{ steps.deploy.outputs.deploy-url }}"
          echo "📝 Commit: ${{ github.sha }}"
          echo "👤 Deployed by: ${{ github.actor }}"

  post-deploy-tests:
    name: 🧪 Post-deployment Tests
    runs-on: ubuntu-latest
    needs: deploy-netlify
    if: success()

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🎭 Install Playwright
        run: npx playwright install --with-deps

      - name: 🌐 Run smoke tests
        run: |
          # Wait for deployment to be ready
          sleep 30
          
          # Run basic smoke tests against production
          echo "🧪 Running smoke tests..."
          curl -f ${{ needs.deploy-netlify.outputs.deploy-url }} || exit 1
          echo "✅ Site is responding"

      - name: ⚡ Performance check
        run: |
          echo "⚡ Running basic performance check..."
          # Add lighthouse or other performance checks here
          echo "✅ Performance check completed"

  notify-success:
    name: 📢 Notify Deployment Success
    runs-on: ubuntu-latest
    needs: [deploy-netlify, post-deploy-tests]
    if: success()

    steps:
      - name: 📢 Notify team
        run: |
          echo "🎉 Deployment completed successfully!"
          echo "🔗 Live site: ${{ needs.deploy-netlify.outputs.deploy-url }}"
          echo "📝 Commit: ${{ github.sha }}"
          echo "🎯 Environment: ${{ github.event.inputs.environment || 'production' }}"

  notify-failure:
    name: 🚨 Notify Deployment Failure
    runs-on: ubuntu-latest
    needs: [quality-check, build-for-deploy, deploy-netlify, post-deploy-tests]
    if: failure()

    steps:
      - name: 🚨 Notify failure
        run: |
          echo "❌ Deployment failed!"
          echo "📝 Commit: ${{ github.sha }}"
          echo "🔍 Check the logs for details"
          echo "🛠️ Action required by: ${{ github.actor }}" 